#include "hal_data.h"

FSP_CPP_HEADER
void R_BSP_WarmStart(bsp_warm_start_event_t event);
FSP_CPP_FOOTER

extern bsp_leds_t g_bsp_leds;

/*******************************************************************************************************************//**
 * main() is generated by the RZA3UL Configuration editor and is used to generate threads if an RTOS is used.
 * This function is called by main() when no RTOS is used.
 **********************************************************************************************************************/
void hal_entry(void)
{
    R_IOPORT_Open(&g_ioport_ctrl, &g_bsp_pin_cfg);
    R_BSP_PinAccessEnable();

    const bsp_delay_units_t bsp_delay_units = BSP_DELAY_UNITS_MILLISECONDS;
    bsp_leds_t leds = g_bsp_leds;
    bsp_io_level_t pin_level = BSP_IO_LEVEL_LOW;

    while (true) {
        for (uint32_t i = 0; i < leds.led_count; i++) {
            uint32_t pin = leds.p_leds[i];
            R_BSP_PinWrite((bsp_io_port_pin_t) pin, pin_level);
        }

        if (BSP_IO_LEVEL_LOW == pin_level) {
            pin_level = BSP_IO_LEVEL_HIGH;
        }
        else {
            pin_level = BSP_IO_LEVEL_LOW;
        }

        R_BSP_SoftwareDelay(200, bsp_delay_units);
    }
}

/*******************************************************************************************************************//**
 * This function is called at various points during the startup process.  This implementation uses the event that is
 * called right before main() to set up the pins.
 *
 * @param[in]  event    Where at in the start up process the code is currently at
 **********************************************************************************************************************/
void R_BSP_WarmStart(bsp_warm_start_event_t event)
{
    if (BSP_WARM_START_RESET == event)
    {
        /* Initialize MMU. */
        R_MMU_Open (&g_mmu_ctrl, &g_mmu_cfg);
    }

    if (BSP_WARM_START_POST_C == event)
    {
        /* C runtime environment and system clocks are setup. */

        /* Configure pins. */
        R_IOPORT_Open (&g_ioport_ctrl, &g_bsp_pin_cfg);
    }
}
