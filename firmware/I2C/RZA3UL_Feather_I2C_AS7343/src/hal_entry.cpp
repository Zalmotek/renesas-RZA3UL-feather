#include "AMS_OSRAM_AS7343.h"
#include "SerialCompatibility.h"

FSP_CPP_HEADER
void R_BSP_WarmStart(bsp_warm_start_event_t event);
FSP_CPP_FOOTER

AMS_OSRAM_AS7343 as7343;

/*******************************************************************************************************************//**
 * main() is generated by the RZA3UL Configuration editor and is used to generate threads if an RTOS is used.
 * This function is called by main() when no RTOS is used.
 **********************************************************************************************************************/
void hal_entry(void)
{
    Serial.begin(115200);

    if (!as7343.begin()){
            Serial.print((uint8_t*)"Could not find AS7343\n");
            while (1) { delay(10); }
          }

        as7343.setATIME(100);
        as7343.setASTEP(999);
        as7343.setGain(AS7343_GAIN_256X);

        //as7343.enableLED(true);
        //as7343.setLEDCurrent(15);

        uint16_t readings[12];

        while(true) {
            if (!as7343.readAllChannels(readings)){
                Serial.println((uint8_t*)"Error reading all channels!");
              }
            else {
                Serial.print((uint8_t*)"Success\n");
            }

              Serial.print((uint8_t*)"ADC0/F1 415nm : "); Serial.println(readings[0]);
              Serial.print((uint8_t*)"ADC1/F2 445nm : "); Serial.println(readings[1]);
              Serial.print((uint8_t*)"ADC2/F3 480nm : "); Serial.println(readings[2]);
              Serial.print((uint8_t*)"ADC3/F4 515nm : "); Serial.println(readings[3]);
              Serial.print((uint8_t*)"ADC0/F5 555nm : "); Serial.println(readings[6]);

              Serial.print((uint8_t*)"ADC1/F6 590nm : "); Serial.println(readings[7]);
              Serial.print((uint8_t*)"ADC2/F7 630nm : "); Serial.println(readings[8]);
              Serial.print((uint8_t*)"ADC3/F8 680nm : "); Serial.println(readings[9]);
              Serial.print((uint8_t*)"ADC4/Clear    : "); Serial.println(readings[4]);
              Serial.print((uint8_t*)"ADC5/NIR      : "); Serial.println(readings[5]);
              delay(1000);
        }
}

/*******************************************************************************************************************//**
 * This function is called at various points during the startup process.  This implementation uses the event that is
 * called right before main() to set up the pins.
 *
 * @param[in]  event    Where at in the start up process the code is currently at
 **********************************************************************************************************************/
void R_BSP_WarmStart(bsp_warm_start_event_t event)
{
    if (BSP_WARM_START_RESET == event)
    {
        /* Initialize MMU. */
        R_MMU_Open (&g_mmu_ctrl, &g_mmu_cfg);
    }

    if (BSP_WARM_START_POST_C == event)
    {
        /* C runtime environment and system clocks are setup. */

        /* Configure pins. */
        R_IOPORT_Open (&g_ioport_ctrl, &g_bsp_pin_cfg);
    }
}
